{"ast":null,"code":"var _jsxFileName = \"/Users/kianbaban/Development/FrontEnd/Flo-shops/src/components/sign-up/sign-up-form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport \"./sign-up-form.scss\";\nimport { creatAuthUserWithEmailAndPassword, creatUserDocumentFromAuth } from '../../utils/firebase/firebase.utils';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { Notify } from '../../utils/notify.utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SignUpForm() {\n  _s();\n  const navigate = useNavigate();\n  const defaultFormFields = {\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n  const ResetFormFields = () => setFormFields(defaultFormFields);\n  const Submit = async e => {\n    e.preventDefault();\n    if (confirmPassword !== password) {\n      Notify('error', 'Passwords do not match');\n      return;\n    }\n    try {\n      const {\n        user\n      } = await creatAuthUserWithEmailAndPassword(email, password);\n      await creatUserDocumentFromAuth(user, {\n        displayName\n      });\n      ResetFormFields();\n      Notify('success', 'Your');\n      navigate('/');\n    } catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        Notify('error', 'Email Already in Use');\n      }\n      console.log('Error in creating user with email and password' + error);\n      ResetFormFields();\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target; // here we get name and value of each input\n    setFormFields({\n      ...formFields,\n      [name]: value\n    }); // we set the specific key of the FormFields object\n    // Let's create a form validation in Utils for the content of this form.\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-up-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Don't have an account?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: Submit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Display Name\",\n          type: \"text\",\n          name: \"displayName\",\n          onChange: handleChange,\n          required: true,\n          value: displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Email\",\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          required: true,\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Password\",\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          required: true,\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"Confirm Password\",\n          type: \"password\",\n          name: \"confirmPassword\",\n          onChange: handleChange,\n          required: true,\n          value: confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(SignUpForm, \"ZQI6DyG3wOgk3/WA4sfv/PsWTac=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpForm;\nexport default SignUpForm;\nvar _c;\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","useState","useNavigate","creatAuthUserWithEmailAndPassword","creatUserDocumentFromAuth","FormInput","Button","Notify","SignUpForm","navigate","defaultFormFields","displayName","email","password","confirmPassword","formFields","setFormFields","ResetFormFields","Submit","e","preventDefault","user","error","code","console","log","handleChange","name","value","target"],"sources":["/Users/kianbaban/Development/FrontEnd/Flo-shops/src/components/sign-up/sign-up-form.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate} from 'react-router-dom';\nimport \"./sign-up-form.scss\";\n\n\nimport { creatAuthUserWithEmailAndPassword, creatUserDocumentFromAuth } from '../../utils/firebase/firebase.utils';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { Notify } from '../../utils/notify.utils';\n\nfunction SignUpForm() {\n    const navigate = useNavigate();\n\n    const defaultFormFields = {\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: '',\n    }\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const { displayName, email, password, confirmPassword } = formFields;\n\n    const ResetFormFields = () => setFormFields(defaultFormFields);\n\n    const Submit = async (e) => {\n        e.preventDefault();\n        if(confirmPassword !== password) {\n            Notify('error', 'Passwords do not match')\n            return;\n        } \n        try {\n            const { user } = await creatAuthUserWithEmailAndPassword(email, password);\n            await creatUserDocumentFromAuth(user, { displayName });\n            ResetFormFields();\n            Notify('success', 'Your')\n            navigate('/');\n        } catch(error){\n            if(error.code === 'auth/email-already-in-use'){\n                Notify('error', 'Email Already in Use')\n            }\n            console.log('Error in creating user with email and password' + error);\n            ResetFormFields();\n        }\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;                       // here we get name and value of each input\n        setFormFields({ ...formFields, [name]: value });        // we set the specific key of the FormFields object\n        // Let's create a form validation in Utils for the content of this form.\n    }\n    return (\n        <>\n        <div className='sign-up-container'>\n            <h2>Don't have an account?</h2>\n            <form onSubmit={ Submit }>\n                <FormInput label=\"Display Name\" type=\"text\" name=\"displayName\" onChange={handleChange} required value={displayName} />\n                <FormInput label=\"Email\" type=\"email\" name=\"email\" onChange={handleChange} required value={email} />\n                <FormInput label=\"Password\" type=\"password\" name=\"password\" onChange={handleChange} required value={password} />\n                <FormInput label=\"Confirm Password\" type=\"password\" name='confirmPassword' onChange={handleChange} required value={confirmPassword} />\n                <Button type=\"submit\" >Sign Up</Button>            \n            </form>\n        </div>\n        </>\n        \n    )\n}\n\nexport default SignUpForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}