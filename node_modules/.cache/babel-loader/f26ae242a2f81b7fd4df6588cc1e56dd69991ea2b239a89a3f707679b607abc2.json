{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n  authDomain: \"flo-shop-f1269.firebaseapp.com\",\n  projectId: \"flo-shop-f1269\",\n  storageBucket: \"flo-shop-f1269.appspot.com\",\n  messagingSenderId: \"327272085019\",\n  appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const db = getFirestore(firebaseApp);\n\n// Authentication\nconst googleProvider = new GoogleAuthProvider(); // Using google auth provider class\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider); // We want the signInWithPopup function to get runinng when it is called\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider);\nexport const creatUserDocumentFromAuth = async function (userAuth) {\n  let additionalInfo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapShot = await getDoc(userDocRef);\n  // if user dose not exist\n  if (!userSnapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInfo\n      });\n    } catch (error) {\n      console.log('error in creating user');\n    }\n  }\n  return userDocRef;\n};\nexport const creatAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return; //Exith the method when email or password is not provided\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return; //Exith the method when email or password is not provided\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => signOut(auth);\nexport const onAuthStateChangeListener = callback => onAuthStateChanged(auth, callback);\n\n// _____________________________________________________________________________________________________\n\nexport const printCourses = async () => {\n  const coursesSnapshot = await getDoc(userDocRef);\n  console.log(courses);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","db","googleProvider","setCustomParameters","prompt","auth","signInWithGooglePopup","signInWithGoogleRedirect","creatUserDocumentFromAuth","userAuth","additionalInfo","userDocRef","uid","console","log","userSnapShot","exists","displayName","email","createdAt","Date","error","creatAuthUserWithEmailAndPassword","password","signInAuthUserWithEmailAndPassword","signOutUser","onAuthStateChangeListener","callback","printCourses","coursesSnapshot","courses"],"sources":["/Users/kianbaban/Development/FrontEnd/Flo-shops/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n    authDomain: \"flo-shop-f1269.firebaseapp.com\",\n    projectId: \"flo-shop-f1269\",\n    storageBucket: \"flo-shop-f1269.appspot.com\",\n    messagingSenderId: \"327272085019\",\n    appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const db = getFirestore(firebaseApp);\n\n// Authentication\nconst googleProvider = new GoogleAuthProvider();          // Using google auth provider class\ngoogleProvider.setCustomParameters({\n    prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, googleProvider);         // We want the signInWithPopup function to get runinng when it is called\nexport const signInWithGoogleRedirect = () => signInWithRedirect(auth, googleProvider)\n\nexport const creatUserDocumentFromAuth = async (userAuth, additionalInfo = {}) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log(userDocRef);\n\n    const userSnapShot = await getDoc(userDocRef)\n    // if user dose not exist\n    if(!userSnapShot.exists()){\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n        try{\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt,\n                ...additionalInfo,\n            })\n        } catch (error) {\n            console.log('error in creating user')\n        }\n    }\n    return userDocRef;\n};\n\nexport const creatAuthUserWithEmailAndPassword = async (email, password) => {\n    if(!email || !password) return;                             //Exith the method when email or password is not provided\n    return await createUserWithEmailAndPassword(auth, email, password)\n}\n\nexport const signInAuthUserWithEmailAndPassword = async (email, password) => {\n    if(!email || !password) return;                             //Exith the method when email or password is not provided\n    return await signInWithEmailAndPassword(auth, email, password)\n}\n\nexport const signOutUser = async() => signOut(auth)\n\n\nexport const onAuthStateChangeListener = (callback) => onAuthStateChanged(auth, callback)\n\n\n// _____________________________________________________________________________________________________\n\nexport const printCourses = async () => {\n    const coursesSnapshot = await getDoc(userDocRef)\n    console.log(courses);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}