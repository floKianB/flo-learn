{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDocM } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n  authDomain: \"flo-shop-f1269.firebaseapp.com\",\n  projectId: \"flo-shop-f1269\",\n  storageBucket: \"flo-shop-f1269.appspot.com\",\n  messagingSenderId: \"327272085019\",\n  appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Authentication\nconst provider = new GoogleAuthProvider(); // Using google auth provider class\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider); // We want the signInWithPopup function to get runinng when it is called","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDocM","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup"],"sources":["/Users/kianbaban/Development/FrontEnd/Flo-shops/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDocM } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n    authDomain: \"flo-shop-f1269.firebaseapp.com\",\n    projectId: \"flo-shop-f1269\",\n    storageBucket: \"flo-shop-f1269.appspot.com\",\n    messagingSenderId: \"327272085019\",\n    appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\n// Authentication\nconst provider = new GoogleAuthProvider();          // Using google auth provider class\nprovider.setCustomParameters({\n    prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);         // We want the signInWithPopup function to get runinng when it is called"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAChG,SAASC,YAAY,EAAEC,GAAG,EAAEC,OAAO,QAAQ,oBAAoB;AAC/D;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGf,aAAa,CAACQ,cAAc,CAAC;;AAEjD;AACA,MAAMQ,QAAQ,GAAG,IAAIZ,kBAAkB,EAAE,CAAC,CAAU;AACpDY,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGlB,OAAO,EAAE;AAC7B,OAAO,MAAMmB,qBAAqB,GAAG,MAAMjB,eAAe,CAACgB,IAAI,EAAEH,QAAQ,CAAC,CAAC,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}