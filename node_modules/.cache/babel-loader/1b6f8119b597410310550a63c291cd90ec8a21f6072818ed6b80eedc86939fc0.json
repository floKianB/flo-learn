{"ast":null,"code":"var _jsxFileName = \"/Users/kianbaban/Development/FrontEnd/Flo-shops/src/context/cart.context.jsx\",\n  _s = $RefreshSig$();\nimport { useState, createContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext({\n  isCartOpen: false,\n  setIsCartOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  cartCount: 0,\n  totalPrice: 0\n});\n\n// This Function is designed to check how a new product should be added to the cart\nconst addCartItemChecker = (cartItems, selectedProductToAdd) => {\n  // Product already exist in cart\n  const checkIfProductExists = cartItems.find(eachCartItem => eachCartItem.id === selectedProductToAdd.id);\n  if (checkIfProductExists) {\n    return cartItems.map(eachCartItem => eachCartItem.id === selectedProductToAdd.id ? {\n      ...eachCartItem,\n      quantity: eachCartItem.quantity + 1\n    } : eachCartItem);\n  }\n  // New product adding to Cart\n  return [...cartItems, {\n    ...selectedProductToAdd,\n    quantity: 1\n  }];\n};\n// This Function is designed to check if a product should be removed or decrease the quantity of it\nconst removeCartItemChecker = (cartItems, selectedProductToRemove) => {\n  const selectedProduct = cartItems.find(eachCartItem => eachCartItem.id === selectedProductToRemove.id);\n  if (selectedProduct.quantity !== 1) {\n    return cartItems.map(eachCartItem => eachCartItem.id === selectedProductToRemove.id ? {\n      ...eachCartItem,\n      quantity: eachCartItem.quantity - 1\n    } : eachCartItem);\n  } else {\n    return cartItems.filter(eachCartItem => eachCartItem.id !== selectedProduct.id);\n  }\n};\n// This function wil delete the product from our cart immediately\nconst deleteAProduct = (cartItems, selectedProductToDelete) => {\n  return cartItems.filter(eachCartItem => eachCartItem.id !== selectedProductToDelete.id);\n};\n\n// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nexport const CartProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cartItems, setCartItems] = useState([]);\n  // Add product to cart items\n  const addItemToCart = selectedProductToAdd => {\n    setCartItems(addCartItemChecker(cartItems, selectedProductToAdd));\n  };\n  // Remove or Delete product from cart items\n  const removeItemFromCart = selectedProductToRemove => {\n    setCartItems(removeCartItemChecker(cartItems, selectedProductToRemove));\n  };\n  const deleteItemFromCart = selectedProductToDelete => {\n    setCartItems(deleteAProduct(cartItems, selectedProductToDelete));\n  };\n  const [cartCount, setCartCount] = useState(0);\n  const [totalPrice, setTotalPrice] = useState(0);\n  useEffect(() => {\n    const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartCount(newCartCount);\n  }, [cartItems]);\n  useEffect(() => {\n    const newTotalPrice = cartItems.reduce((total, cartItem) => total + cartItem.quanitity * cartItem.price, 0);\n    setTotalPrice(newCartCount);\n  }, [cartItems]);\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    setCartItems,\n    addItemToCart,\n    removeItemFromCart,\n    deleteItemFromCart,\n    cartCount,\n    totalPrice\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"F9WGNxZ+LR9lF+4UCu3RJlR7V5U=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useState","createContext","useEffect","CartContext","isCartOpen","setIsCartOpen","cartItems","addItemToCart","cartCount","totalPrice","addCartItemChecker","selectedProductToAdd","checkIfProductExists","find","eachCartItem","id","map","quantity","removeCartItemChecker","selectedProductToRemove","selectedProduct","filter","deleteAProduct","selectedProductToDelete","CartProvider","children","setCartItems","removeItemFromCart","deleteItemFromCart","setCartCount","setTotalPrice","newCartCount","reduce","total","cartItem","newTotalPrice","quanitity","price","value"],"sources":["/Users/kianbaban/Development/FrontEnd/Flo-shops/src/context/cart.context.jsx"],"sourcesContent":["import { useState, createContext, useEffect } from 'react';\n\nexport const CartContext = createContext({\n    isCartOpen: false,\n    setIsCartOpen: () => {},\n    cartItems: [],\n    addItemToCart: () => {},\n    cartCount: 0,\n    totalPrice: 0,\n}) \n\n\n// This Function is designed to check how a new product should be added to the cart\nconst addCartItemChecker = (cartItems, selectedProductToAdd) => {\n    // Product already exist in cart\n    const checkIfProductExists = cartItems.find((eachCartItem) => eachCartItem.id === selectedProductToAdd.id)\n    if(checkIfProductExists){\n        return cartItems.map((eachCartItem) => eachCartItem.id === selectedProductToAdd.id ? { ...eachCartItem, quantity: eachCartItem.quantity+1 } : eachCartItem)\n    }\n    // New product adding to Cart\n    return [...cartItems, { ...selectedProductToAdd, quantity: 1 }]\n}\n// This Function is designed to check if a product should be removed or decrease the quantity of it\nconst removeCartItemChecker = (cartItems, selectedProductToRemove) => {\n    const selectedProduct = (cartItems.find((eachCartItem) => eachCartItem.id === selectedProductToRemove.id));\n    if(selectedProduct.quantity !== 1){\n        return cartItems.map((eachCartItem) => eachCartItem.id === selectedProductToRemove.id ? { ...eachCartItem, quantity: eachCartItem.quantity-1 } : eachCartItem)\n    } else {\n        return cartItems.filter((eachCartItem) => eachCartItem.id !== selectedProduct.id);\n    }\n}\n// This function wil delete the product from our cart immediately\nconst deleteAProduct = (cartItems, selectedProductToDelete) => {\n    return cartItems.filter((eachCartItem) => eachCartItem.id !== selectedProductToDelete.id);\n}\n\n// -----------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\nexport const CartProvider = ({ children }) => {\n    const [cartItems, setCartItems] = useState([]);\n    // Add product to cart items\n    const addItemToCart = ( selectedProductToAdd ) => {\n        setCartItems(addCartItemChecker(cartItems, selectedProductToAdd))\n    }\n    // Remove or Delete product from cart items\n    const removeItemFromCart = ( selectedProductToRemove ) => {\n        setCartItems(removeCartItemChecker(cartItems, selectedProductToRemove))\n    }\n    const deleteItemFromCart = ( selectedProductToDelete ) => {\n        setCartItems(deleteAProduct(cartItems, selectedProductToDelete))\n    }\n\n    const [cartCount, setCartCount] = useState(0);\n    const [totalPrice, setTotalPrice] = useState(0);\n\n    useEffect(()=>{\n        const newCartCount = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n        setCartCount(newCartCount)\n    }, [cartItems])\n\n    useEffect(()=>{\n        const newTotalPrice = cartItems.reduce((total, cartItem) => total + (cartItem.quanitity * cartItem.price), 0)\n        setTotalPrice(newCartCount)\n    }, [cartItems])\n\n\n    const [isCartOpen, setIsCartOpen] = useState(false);\n    const value = {isCartOpen, setIsCartOpen, cartItems, setCartItems, addItemToCart, removeItemFromCart, deleteItemFromCart, cartCount, totalPrice};\n    return <CartContext.Provider value={value}>{ children }</CartContext.Provider>\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}