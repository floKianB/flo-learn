{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n  authDomain: \"flo-shop-f1269.firebaseapp.com\",\n  projectId: \"flo-shop-f1269\",\n  storageBucket: \"flo-shop-f1269.appspot.com\",\n  messagingSenderId: \"327272085019\",\n  appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const db = getFirestore();\n\n// Authentication\nconst provider = new GoogleAuthProvider(); // Using google auth provider class\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider); // We want the signInWithPopup function to get runinng when it is called\n\nexport const creatUserDocumentFromAuth = async userAuth => {\n  const useDocRef = doc(db, 'users', userAuth.uid);\n  console.log(useDocRef);\n  const useSnapShot = await getDoc(useDocRef);\n  console.log(useSnapShot);\n  console.log(useSnapShot.exists());\n  // if user dose not exist\n  if (!snapShot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(useDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error in creating user');\n    }\n  }\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","db","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","creatUserDocumentFromAuth","userAuth","useDocRef","uid","console","log","useSnapShot","exists","snapShot","displayName","email","createdAt","Date","error"],"sources":["/Users/kianbaban/Development/FrontEnd/Flo-shops/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n// Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAVoGZyCYgKBj7i4G350y7GYHBdeEwL1kQ\",\n    authDomain: \"flo-shop-f1269.firebaseapp.com\",\n    projectId: \"flo-shop-f1269\",\n    storageBucket: \"flo-shop-f1269.appspot.com\",\n    messagingSenderId: \"327272085019\",\n    appId: \"1:327272085019:web:db8d6a1282088fc5eb2abe\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const db = getFirestore();\n\n// Authentication\nconst provider = new GoogleAuthProvider();          // Using google auth provider class\nprovider.setCustomParameters({\n    prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);         // We want the signInWithPopup function to get runinng when it is called\n\nexport const creatUserDocumentFromAuth = async (userAuth) => {\n    const useDocRef = doc(db, 'users', userAuth.uid);\n    console.log(useDocRef);\n\n    const useSnapShot = await getDoc(useDocRef)\n    console.log(useSnapShot);\n    console.log(useSnapShot.exists());\n    // if user dose not exist\n    if(!snapShot.exists()){\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n        try{\n            await setDoc(useDocRef, {\n                displayName,\n                email,\n                createdAt,\n            })\n        } catch (error) {\n            console.log('error in creating user')\n        }\n    \n    }\n    \n}"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAChG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;AACtE;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,gCAAgC;EAC5CC,SAAS,EAAE,gBAAgB;EAC3BC,aAAa,EAAE,4BAA4B;EAC3CC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAc,CAAC;AACjD,OAAO,MAAMQ,EAAE,GAAGZ,YAAY,EAAE;;AAEhC;AACA,MAAMa,QAAQ,GAAG,IAAId,kBAAkB,EAAE,CAAC,CAAU;AACpDc,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAE;AACZ,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAAE;AAC7B,OAAO,MAAMqB,qBAAqB,GAAG,MAAMnB,eAAe,CAACkB,IAAI,EAAEH,QAAQ,CAAC,CAAC,CAAS;;AAEpF,OAAO,MAAMK,yBAAyB,GAAG,MAAOC,QAAQ,IAAK;EACzD,MAAMC,SAAS,GAAGnB,GAAG,CAACW,EAAE,EAAE,OAAO,EAAEO,QAAQ,CAACE,GAAG,CAAC;EAChDC,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EAEtB,MAAMI,WAAW,GAAG,MAAMtB,MAAM,CAACkB,SAAS,CAAC;EAC3CE,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;EACxBF,OAAO,CAACC,GAAG,CAACC,WAAW,CAACC,MAAM,EAAE,CAAC;EACjC;EACA,IAAG,CAACC,QAAQ,CAACD,MAAM,EAAE,EAAC;IAClB,MAAM;MAAEE,WAAW;MAAEC;IAAM,CAAC,GAAGT,QAAQ;IACvC,MAAMU,SAAS,GAAG,IAAIC,IAAI,EAAE;IAC5B,IAAG;MACC,MAAM3B,MAAM,CAACiB,SAAS,EAAE;QACpBO,WAAW;QACXC,KAAK;QACLC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZT,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACzC;EAEJ;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}